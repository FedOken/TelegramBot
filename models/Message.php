<?php

namespace app\models;

use Yii;
use yii\base\Model;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "message".
 *
 * @property int $id
 * @property int $enable
 * @property string $message
 */
class Message extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'message';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['enable', 'message'], 'required'],
            [['enable'], 'boolean'],
            [['message'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'enable' => 'Enable',
            'message' => 'Message',
        ];
    }

    /**
     * Set enable foreach model to 0
     *
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        //Update other enabled to 0
        if ($this->enable) {
            Message::updateAll(['enable' => 0]);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * Set enable only to one row
     *
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        //Search enable model, if searched model === current model, set enable to current
        $model = self::findOne(['enable' => 1]);
        if (!$model || $model->id === $this->id) {
            $this->enable = 1;
            Message::updateAll(['enable' => 1], ['id' => $this->id]);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * Return enabled message
     * @return Message|null
     */
    public static function getActiveMessage()
    {
        return ArrayHelper::getValue(self::findOne(['enable' => 1]), 'message');
    }
}
